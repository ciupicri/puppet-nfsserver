# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
# Based on code from
# puppet-modules.git.puzzle.ch/module-nfsd/lib/puppet/parser/functions
#
# Copyright 2008, admin(at)immerda.ch
# Copyright 2008, Puzzle ITC GmbH
# Marcel HÃ¤rry haerry+puppet(at)puzzle.ch
# Simon Josi josi+puppet(at)puzzle.ch
# Matthias Imsand imsand+puppet(at)puzzle.ch
#
# This program is free software; you can redistribute
# it and/or modify it under the terms of the GNU
# General Public License version 3 as published by
# the Free Software Foundation.

# ---- original file header ----
#
# @summary
#   Summarise what the function does here
#
Puppet::Functions.create_function(:'gen_client_list') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
    aug_cmd = Array.new
    clients = Array.new
    options = Array.new
    clients = args[0]
    options = args[1]
    dir = args[2]
    aug_cmd << "rm dir[.='#{dir}']"
    #aug_cmd << "insert dir after \"/dir[last()]\""
    aug_cmd << "set dir[last()+1] #{dir}"
    clients.each do |client|
      aug_cmd << "set dir[last()]/client[last()+1] #{client}"
      options.each do |option|
        aug_cmd << "set dir[last()]/client[last()]/option[last()+1] #{option}"
      end
    end
    return aug_cmd
  
  end
end
